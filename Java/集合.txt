

Iterable => collection
               List 有序的 可重复的
                  ArrayList 底层是数组 查询快 增删慢 线程不安全 效率高

                  LinkList 底层链表 查询慢 增删快 线程不安全 效率高


               Set  无序 不可重复
                  HashSet 无序 不可重复 线程不安全 hash比较重复 对象必须保证hashcode 和equest
                     LinkedHashSet 不可变 有序（链表 哈希）


                   TreeSet 有序 不可重复


            Map不是属于集合类 是Key Value  之间映射关系  Entry<Key,Value>

                HashMap：Map基于散列表的实现。插入和查询“键值对”的开销是固定的。可以通过构造器设置容量capacity和负载因子load factor，以调整容器的性能。

                LinkedHashMap： 类似于HashMap，但是迭代遍历它时，取得“键值对”的顺序是其插入次序，或者是最近最少使用(LRU)的次序。只比HashMap慢一点。而在迭代访问时发而更快，因为它使用链表维护内部次序。

                TreeMap ： 基于红黑树数据结构的实现。查看“键”或“键值对”时，它们会被排序(次序由Comparabel或Comparator决定)。TreeMap的特点在 于，你得到的结果是经过排序的。TreeMap是唯一的带有subMap()方法的Map，它可以返回一个子树。

                WeakHashMao ：弱键(weak key)Map，Map中使用的对象也被允许释放: 这是为解决特殊问题设计的。如果没有map之外的引用指向某个“键”，则此“键”可以被垃圾收集器回收。

                IdentifyHashMap： : 使用==代替equals()对“键”作比较的hash map。专为解决特殊问题而设计。


