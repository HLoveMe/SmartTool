IO
    按类型 字节流  字符流
    按功能 输入   输出
分类
    1. File（文件特征与管理）：用于文件或者目录的描述信息，例如生成新目录，修改文件名，删除文件，判断文件所在路径等。

     2. InputStream（二进制格式操作）：抽象类，基于字节的输入操作，是所有输入流的父类。定义了所有输入流都具有的共同特征。

     3. OutputStream（二进制格式操作）：抽象类。基于字节的输出操作。是所有输出流的父类。定义了所有输出流都具有的共同特征。

     4.Reader（文件格式操作）：抽象类，基于字符的输入操作。

     5. Writer（文件格式操作）：抽象类，基于字符的输出操作。

     6. RandomAccessFile（随机文件操作）：一个独立的类，直接继承至Object.它的功能丰富，可以从文件的任意位置进行存取（输入输出）操作。

字节流
    InputStream
        ByteArrayInputStream (Byte得到流)
        FileInputStream      (文件中得到流)
        StreamBufferInputStream  (StringBuffer得到流)
        PipedInputStream  是从与其它线程共用的管道中读取数据.
        ObjectInputStream
        FilterInputStream（装饰器流 父类 包装一个输入流 进行功能扩展）
            DataInputStream  包装流 容许直接写入int float long string 类型数据
            BufferedInputStream 包装流 提供一个缓冲区域 加快io数据
            PushBackInputStream
    OutputStream
        ByteArrayOutputStream 输出到byte数组
        FileOutputStream      输入到文件
        PipedOutputStream是向与其它线程共用的管道中写入数据。
        ObjectOutputStream
        FilterOutputStream  子类都是装饰流。
            DataOutputStream  吧基础数据写入输入流中
            BufferedOutputStream  带缓冲的输出

字符流
    Reader  输入
        CharReader、 Char数组、。
        StringReader  String中读取数据
        PipedReader是从与其它线程共用的管道中读取数
        BufferedReader 装饰其它Reader 提供缓冲功能
        FilterReader 是所有自定义具体装饰流的父类
            PushbackReader对Reader对象进行装饰，会增加一个行号
        InputStreamReader * 桥梁  把字节流 包装为 字符流
            FileReader  文件 ===> 字节流 ==> 字符流

    Writer 字符输出
        CharArrayWriter Char数组、。
        StringWriter  String中写入数据
        PipedWriter  是向与其它线程共用的管道中写入数据，
        BufferedWriter   是一个装饰器为Writer提供缓冲功能。
        OutputStreamWriter * 桥梁 字符输出流 ==> 字节输出流 
            FileWriter 文件  (字符流 ==> 字节流 ===> 文件)

    区别
        字节流                      字符流
        （ InputStream OutStream）;（Reader,Writer）   
         8bit(二进制) ;             按照码表映射字符 只能处理纯文本信息
        不具备缓冲区   ;             输出到缓冲区 必须调用close flush

